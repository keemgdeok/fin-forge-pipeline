name: PR Validation

on:
  pull_request:
    branches: [main, develop]
    paths-ignore:
      - '**/*.md'
      - 'docs/**'

permissions:
  contents: read

concurrency:
  group: pr-${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

env:
  PYTHON_VERSION: &python_version '3.12'
  NODE_VERSION: &node_version '20'

jobs:
  validate:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    outputs:
      python_any_changed: ${{ steps.changed-files.outputs.python_any_changed }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Get changed files
        id: changed-files
        uses: tj-actions/changed-files@v44
        with:
          files_yaml: |
            python:
              - '**/*.py'
              - 'requirements.txt'
              - 'pyproject.toml'
              - 'setup.cfg'
              - 'setup.py'
            infra:
              - 'infrastructure/**'
            node:
              - 'package.json'
              - 'package-lock.json'
              - 'npm-shrinkwrap.json'
              - 'yarn.lock'

      - name: Setup Python
        if: ${{ steps.changed-files.outputs.python_any_changed == 'true' || steps.changed-files.outputs.infra_any_changed == 'true' }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          cache: 'pip'

      - name: Install Python dependencies
        if: ${{ steps.changed-files.outputs.python_any_changed == 'true' || steps.changed-files.outputs.infra_any_changed == 'true' }}
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Dependency vulnerability scan (safety)
        if: ${{ steps.changed-files.outputs.python_any_changed == 'true' || steps.changed-files.outputs.infra_any_changed == 'true' }}
        run: |
          set -o pipefail
          echo "üõ°Ô∏è Running Safety vulnerability scan..."
          safety check --full-report --output text | tee safety-report.txt
          safety_exit=$?
          {
            echo '### Safety Dependency Scan'
            echo
            if [ -s safety-report.txt ]; then
              cat safety-report.txt
            else
              echo 'Í≤∞Í≥º Î≥¥Í≥†ÏÑúÎ•º ÏÉùÏÑ±ÌïòÏßÄ Î™ªÌñàÏäµÎãàÎã§.'
            fi
          } >> "$GITHUB_STEP_SUMMARY"
          exit $safety_exit

      - name: Setup Node.js (infra changed, cache)
        if: ${{ steps.changed-files.outputs.infra_any_changed == 'true' && hashFiles('**/package-lock.json', '**/npm-shrinkwrap.json', '**/yarn.lock') != '' }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Setup Node.js (infra changed, no lockfile)
        if: ${{ steps.changed-files.outputs.infra_any_changed == 'true' && hashFiles('**/package-lock.json', '**/npm-shrinkwrap.json', '**/yarn.lock') == '' }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Install Node deps (infra changed)
        if: ${{ steps.changed-files.outputs.infra_any_changed == 'true' && hashFiles('**/package-lock.json') != '' }}
        run: npm ci

      - name: Install CDK CLI (infra changed, no lockfile)
        if: ${{ steps.changed-files.outputs.infra_any_changed == 'true' && hashFiles('**/package-lock.json') == '' }}
        run: npm install --no-save aws-cdk@latest

      - name: CDK synth (infra changed)
        if: ${{ steps.changed-files.outputs.infra_any_changed == 'true' }}
        run: |
          echo "üèóÔ∏è Validating CDK infrastructure..."
          npx cdk synth --context environment=dev

  ci:
    needs: validate
    uses: ./.github/workflows/ci.yml
    with:
      python-version: *python_version
      python-any-changed: ${{ needs.validate.outputs.python_any_changed }}
    secrets: inherit
