name: PR Validation

on:
  pull_request:
    branches: [main, develop]
    types: [opened, synchronize, reopened]

env:
  AWS_REGION: us-east-1
  PYTHON_VERSION: '3.12'
  NODE_VERSION: '18'

jobs:
  validate-pr:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Install CDK CLI
        run: npm install -g aws-cdk

      - name: Cache Python dependencies
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run tests
        run: |
          pytest tests/unit/ -v --tb=short --disable-warnings

      - name: Run code quality checks
        run: |
          black --check src/ tests/ || echo "⚠️ Code formatting issues found"
          flake8 src/ tests/ || echo "⚠️ Linting issues found"
          mypy src/ --ignore-missing-imports --no-strict-optional || echo "⚠️ Type checking completed with warnings"

      - name: CDK Synth (Validation)
        run: |
          cdk synth --context environment=dev --quiet

      - name: Add PR Comment
        uses: actions/github-script@v7
        if: always()
        with:
          script: |
            const { execSync } = require('child_process');
            
            let status = '✅ **PR Validation Passed**';
            let details = [];
            
            try {
              // Check if previous steps failed
              if ('${{ job.status }}' === 'failure') {
                status = '❌ **PR Validation Failed**';
                details.push('- Some validation checks failed. Please review the workflow logs.');
              } else {
                details.push('- All tests passed');
                details.push('- Code quality checks completed');
                details.push('- CDK synthesis successful');
              }
              
              const body = `## ${status}
              
            ### Validation Results:
            ${details.map(d => d).join('\n')}
            
            ### Next Steps:
            ${status.includes('✅') ? 
              '- Ready for merge! 🚀\n- Merging to main/develop will trigger deployment' : 
              '- Please fix the issues and push new commits\n- Validation will re-run automatically'}
              
            ---
            *Validation completed at ${new Date().toISOString()}*`;
              
              // Find existing comment
              const comments = await github.rest.issues.listComments({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.issue.number
              });
              
              const existingComment = comments.data.find(comment => 
                comment.body.includes('PR Validation')
              );
              
              if (existingComment) {
                await github.rest.issues.updateComment({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  comment_id: existingComment.id,
                  body: body
                });
              } else {
                await github.rest.issues.createComment({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  issue_number: context.issue.number,
                  body: body
                });
              }
              
            } catch (error) {
              console.error('Error adding PR comment:', error);
            }