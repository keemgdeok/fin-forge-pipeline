name: Deploy to Production

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      confirm_production:
        description: 'Type "DEPLOY_TO_PRODUCTION" to confirm'
        required: true
        type: string

env:
  AWS_REGION: us-east-1
  PYTHON_VERSION: '3.12'
  NODE_VERSION: '18'

jobs:
  validate-input:
    if: github.event_name == 'workflow_dispatch'
    runs-on: ubuntu-latest
    steps:
      - name: Validate production deployment confirmation
        run: |
          if [[ "${{ github.event.inputs.confirm_production }}" != "DEPLOY_TO_PRODUCTION" ]]; then
            echo "❌ Production deployment not confirmed. Exiting."
            exit 1
          fi
          echo "✅ Production deployment confirmed."

  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Cache Python dependencies
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run comprehensive tests
        run: |
          pytest tests/ -v --cov=src/ --cov-report=xml --cov-fail-under=80

      - name: Run security scan
        run: |
          pip install bandit safety
          bandit -r src/ -f json -o bandit-report.json || true
          safety check --json --output safety-report.json || true

      - name: Run code quality checks
        run: |
          black --check src/ tests/
          flake8 src/ tests/
          mypy src/

  deploy-prod:
    needs: [test, validate-input]
    runs-on: ubuntu-latest
    environment: production
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Install CDK CLI
        run: npm install -g aws-cdk

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID_PROD }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY_PROD }}
          aws-region: ${{ env.AWS_REGION }}

      - name: CDK Bootstrap (if needed)
        run: |
          cdk bootstrap --context environment=prod

      - name: CDK Diff
        run: |
          cdk diff --context environment=prod

      - name: CDK Deploy with approval
        run: |
          cdk deploy --all --context environment=prod --require-approval never

      - name: Create deployment tag
        if: github.event_name == 'workflow_dispatch'
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git tag -a "deployed-$(date +'%Y%m%d-%H%M%S')" -m "Production deployment $(date)"
          git push origin --tags

      - name: Upload CDK outputs
        uses: actions/upload-artifact@v4
        with:
          name: cdk-outputs-prod
          path: cdk.out/