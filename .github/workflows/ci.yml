name: CI

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]
  workflow_dispatch:

env:
  PYTHON_VERSION: '3.12'
  NODE_VERSION: '18'

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        check: [format, test, infra, security]
    
    steps:
      - uses: actions/checkout@v4
      
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          cache: 'pip'
      
      - uses: actions/setup-node@v4
        if: matrix.check == 'infra'
        with:
          node-version: ${{ env.NODE_VERSION }}
      
      - name: Install dependencies
        run: |
          pip install -r requirements.txt
          if [[ "${{ matrix.check }}" == "infra" ]]; then
            npm install -g aws-cdk@latest
          fi
      
      - name: Format check
        if: matrix.check == 'format'
        run: |
          black --check --diff src/ infrastructure/ tests/ || {
            echo "Fix: black src/ infrastructure/ tests/"
            exit 1
          }
          flake8 src/ infrastructure/ tests/ --max-line-length=88 --extend-ignore=E203,W503
      
      - name: Run tests
        if: matrix.check == 'test'
        run: |
          if find tests/ -name "test_*.py" | grep -q .; then
            pytest tests/ -v
          else
            echo "No tests found"
          fi
      
      - name: CDK check
        if: matrix.check == 'infra'
        run: |
          cdk synth --context environment=dev
          cdk synth --context environment=prod
      
      - name: Security scan
        if: matrix.check == 'security' && (github.ref == 'refs/heads/main' || contains(github.event.head_commit.message, '[security]'))
        run: |
          pip install bandit safety
          bandit -r infrastructure/ src/ || true
          safety check || true

  result:
    runs-on: ubuntu-latest
    needs: test
    if: always()
    steps:
      - run: |
          [[ "${{ needs.test.result }}" == "success" ]] && echo "✅ CI passed" || { echo "❌ CI failed"; exit 1; }